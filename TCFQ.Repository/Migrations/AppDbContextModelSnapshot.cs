// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCFQ.Repository.Context;

#nullable disable

namespace TCFQ.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TCFQ.Domain.Answer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    b.Property<ushort>("QuestionId")
                        .HasColumnType("smallint unsigned");

                    b.Property<long>("ResultId")
                        .HasColumnType("BIGINT");

                    b.Property<string>("UserAnswer")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.HasKey("Id");

                    b.HasIndex("ResultId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("TCFQ.Domain.Result", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("BIGINT");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime");

                    b.Property<ushort>("ExamId")
                        .HasColumnType("smallint unsigned");

                    b.Property<string>("Level")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<ushort>("Points")
                        .HasColumnType("smallint unsigned");

                    b.HasKey("Id");

                    b.ToTable("Results");
                });

            modelBuilder.Entity("TCFQ.Domain.Answer", b =>
                {
                    b.HasOne("TCFQ.Domain.Result", "Result")
                        .WithMany("Answers")
                        .HasForeignKey("ResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Result");
                });

            modelBuilder.Entity("TCFQ.Domain.Result", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
